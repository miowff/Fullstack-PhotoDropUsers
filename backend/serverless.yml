service: PhotoDropUsers

frameworkVersion: "3"

plugins:
  - serverless-esbuild
  - serverless-plugin-existing-s3

provider:
  name: aws
  runtime: nodejs14.x
  profile: myawff
  region: us-east-1
  httpApi:
    cors:
      allowedOrigins: ["*"]
      allowedHeaders: ["*"]
      allowedMethods:
        - "GET"
        - "POST"
        - "PUT"
        - "DELETE"
    authorizers:
      usersAuthorizer:
        type: request
        functionName: AuthorizeUser
        identitySource: $request.header.Authorization
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
          Resource:
            - "arn:aws:s3:::photo-drop-images/*"
  environment:
    PHOTO_DROP_DB_USERNAME: ${ssm:PHOTO_DROP_DB_USERNAME}
    PHOTO_DROP_DB_PASSWORD: ${ssm:PHOTO_DROP_DB_PASSWORD}
    PHOTO_DROP_DB_ENDPOINT: ${ssm:PHOTO_DROP_DB_ENDPOINT}
    PHOTO_DROP_DB_PORT: ${ssm:DEFAULT_DB_PORT}
    PHOTO_DROP_DB_NAME: PhotoDropDB
    ACCESS_TOKEN_SECRET_USERS: ${ssm:ACCESS_TOKEN_SECRET_USERS}
    REFRESH_TOKEN_SECRET_USERS: ${ssm:REFRESH_TOKEN_SECRET_USERS}
    BUCKET_NAME: photo-drop-images
    REGION: us-east-1
    TWILIO_ACCOUNT_SID: ${ssm:TWILIO_ACCOUNT_SID}
    TWILIO_AUTH_TOKEN: ${ssm:TWILIO_AUTH_TOKEN}
    TWILIO_PHONE_NUMBERS_PARAM_NAME: TWILIO_PHONE_NUMBERS
    STRIPE_PUBLISHABLE_KEY: ${ssm:STRIPE_PUBLISHABLE_KEY}
    STRIPE_SECRET_KEY: ${ssm:STRIPE_SECRET_KEY}

functions: ${file(yml/functions.yml)}
